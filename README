This is the source code for doing:
1) 1D graph partitioning
2) Pagerank computation (single node and multi node)
3) Single source shortest path algorithm (Delta-stepping)

How to compile:
make debug=<0|1> g500=<0|1> omp=<0|1> pmg=<0|1> ptn=<0|1>
EXPLAINATION:
	0: true 1:false
	debug: use debug mode or not 
	g500: use graph 500 file format or not
	omp: use openmp or not
	pmg: use parallel merge sort or not
	ptn: use (single node) parallel partition or not

How to run:
1) parallel partition (read 1 or num_nodes number of files, and partition them into num_nodes files)
mpirun -np $num_nodes -perhost 1 ./PR -g -f $file -b $dir -n $num_nodes
	-g means partition text files
	-f is the base file
	-b is the base directory
	-n is the number of mpi nodes
mpirun -np $num_nodes ./PR -y -f $file -b $dir -n $num_nodes -s $scale
	-y is to partition the binary files generated by graph 500 (the input has to be num_nodes files with _i extension)

2) parallel page rank computation
mpirun -np $num_nodes -perhost 1 ./PR -i -f $file -b $dir -n $num_nodes -p $num_threads
	-i is to compute mpi based pagerank values
	-p is to set number of threads used
when doing preprocessing:
	mpiexec -perhost 1 -np $num_nodes ./PR -r -f $file -b $dir -n $num_nodes
	-r is to do preprocessing to get the index

3) parallel single source shortest path computation 
./PR -d -f $file -b $dir -p $num_threads
	-d is to compute single source shortest path
	if you want to run serial version, please disable USE_OMP in the Makefile
